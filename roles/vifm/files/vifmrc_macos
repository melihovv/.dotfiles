" vim:syntax=vim

" This is the actual command used to start vi.  The default is vim.
" If you would like to use another vi clone such Elvis or Vile
" you will need to change this setting.

set vicmd=vim

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

" This is how many directories to store in the directory history.

set history=100

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set novimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Use KiB, MiB, ... instead of KB, MB, ...

set noiec

" Selected color scheme

colorscheme Default

" The FUSE_HOME directory will be used as a root dir for all FUSE mounts.
" Unless it exists with write/exec permissions set, vifm will attempt to
" create it.

set fusehome=/tmp/vifm_FUSE

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%m/%d\ %H:%M

" Show list of matches on tab complition in command-line mode

set wildmenu

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do to much requests to slow file systems

set slowfs=curlftpfs

" Set custom status line look

set statusline="  %t%= %A %10u:%-7g %15s %20d  "

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]
mark h ~/

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! rund ! ./%f &
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] gtbl %c | groff -Tascii -man | less
fileviewer *.[1-8] gtbl %c | groff -Tascii -man | col -b

" MD5
filetype *.md5
\ {Check MD5 hash sum}
\ md5sum -c %f,

" GPG signature
filetype *.asc
\ {Check signature}
\ !!gpg --verify %c,

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt
\ {Mount with fuse-zip}
\ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
\ {View contents}
\ zip -sf %c | less,
\ {Extract here}
\ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
\ {Mount with archivemount}
\ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c

" Rar2FsMount and rar archives
filetype *.rar
\ {Mount with rar2fs}
\ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso
\ {Mount with fuseiso}
\ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
\ {Mount with sshfs}
\ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR,

" FtpMount
filetype *.ftp
\ {Mount with curlftpfs}
\ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR,

" Fuse7z and 7z archives
filetype *.7z
\ {Mount with fuse-7z}
\ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Qt projects
filextype *.pro qtcreator %f &

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
if has('unix')
    " For *nix:
    filetype * xdg-open &
else
    " For OS X:
    filetype * open
endif

" For Windows:
" filetype * start, explorer

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,
    \savedirs

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw<c-w>

" Open vim to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | execute ':!vim $MYVIFMRC' | restart<cr>

" Open file in new instance of macvim
nnoremap O :!open /Applications/MacVim.app %f<cr>

" Yank current directory path into the clipboard
nnoremap yd :!echo %d | pbcopy %i<cr>

" Yank current file path into the clipboard
nnoremap yf :!echo %c:p | pbcopy %i<cr>

" Yank current filename without path into the clipboard.
nnoremap yn :!echo -n %c | pbcopy %i<cr>

" Yank root of current file's name into the clipboard.
nnoremap yr :!echo -n %c:r | pbcopy %i<cr>

" Open terminal in current directory
nnoremap ,t :!open /Applications/iTerm.app &<cr>

" Open macvim to edit vifmrc
nnoremap ,C :!open /Applications/MacVim.app $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

vnoremap <f5> :copy<cr>
vnoremap <f6> :move<cr>
vnoremap <f8> :delete<cr>

nnoremap b :bmarks<cr>
nnoremap <C-h> :history<cr>
nnoremap <C-s> :sync<cr>

nnoremap zj :sync %c<cr>
nnoremap zo :sync %c<cr><tab>

source ~/.vifm_extra
